name: linting, testing, building
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build-and-ui-testing:
    runs-on: ubuntu-latest
    concurrency: ci-${{ github.ref }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    strategy:
      matrix:
        node-version: [ 22.x ]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
  
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install modules
        run: npm ci

      - name: Build production project
        run: npm run build:prod

      - name: Run unit tests
        run: npm run unit
        if: always()

      - name: Run UI tests with Chromatic
        uses: chromaui/action@latest
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
        if: always()

      - name: Upload build output as artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-output
          path: './reports'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
        with:
          artifact-name: build-output

  checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 22.x ]

    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install modules
        run: npm ci --force

      - name: Linting TypeScript
        run: npm run lint
        if: always()

      - name: Linting CSS
        run: npm run lint:scss